---
- name: Install boto
  pip:
    name=boto

- name: Create security group
  ec2_group:
    name: "{{ group }}"
    description: HTTP and SSH
    region: "{{ region }}"
    ec2_access_key: "{{ aws_access_key }}"
    ec2_secret_key: "{{ aws_secret_key }}"
    # Inbound rules.
    rules:
      # HTTP.
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      # HTTPS.
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      # SSH.
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      # # ElasticSearch, Logstash, Kibana.
      # - proto: tcp
      #   from_port: 9200
      #   to_port: 9300
      #   cidr_ip: 0.0.0.0/0
      # # Bittorrent tracker.
      # - proto: tcp
      #   from_port: 6881
      #   to_port: 6889
      #   cidr_ip: 0.0.0.0/0

- name: Import key pair 
  ec2_key:
    name: "{{ keypair }}"
    key_material: "{{ ssh_localhost_public_key }}"
    state: present
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"

- name: Launch a new instance
  ec2:
    image: "{{ image }}"
    instance_type: "{{ instance_type }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    keypair: "{{ keypair }}"
    instance_tags:
      name: biostar
    region: "{{ region }}"
    group: "{{ group }}"
    wait: True
    volumes:
      - volume_size: "{{ volume_size }}"
        device_name: /dev/sda1
        device_type: standard
        #delete_on_termination: True
  register: ec2_info

- name: Print info about the launched instance
  debug: 
    msg: "Public IP address is {{ item.public_ip }}' and public DNS name is {{ item.public_dns_name }}"
  with_items: ec2_info.instances

- name: Add the new instance to the local host 
  add_host:
    hostname: "{{ item.public_ip }}"
    groupname: biostarhosts
  with_items: ec2_info.instances

- name: Wait for the new instance to listen on SSH port
  wait_for:
    state: started
    host: "{{ item.public_ip }}"
    port: 22
  with_items: ec2_info.instances

- name: Get rid of SSH "Are you sure you want to continue connecting (yes/no)?" query
  shell: ssh-keyscan -t rsa {{ item.public_ip }} >> $HOME/.ssh/known_hosts
  with_items: ec2_info.instances
