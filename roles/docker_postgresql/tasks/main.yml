---
- name: Read host SSH public key
  command: cat /home/ubuntu/.ssh/id_rsa.pub
  register: host_ssh_public_key

- name: Create dir for Docker volumes
  file:
    path: "{{ host_dir_for_dockervolumes }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0755
  sudo: True

- name: Ensure Docker server is running
  service:
    name: docker
    state: started
  sudo: True

- name: Run the PostgreSQL container
  # We do not use the Ansible docker module because it has an issue if an environment variable cantains a '='.
  # In our case the env var SSH_PUBLIC_KEY might contain '='.
  command: docker run -d -p 2223:22 -p 5432:5432 --name postgresql --volume={{ host_dir_for_dockervolumes }}/pgdata:/srv/pgdata -e "PG_USERNAME={{ postgresql_username }}" -e "PG_PASSWORD={{ postgresql_password }}" -e "SSH_PUBLIC_KEY={{ host_ssh_public_key.stdout }}" nimiq/postgresql93
  sudo: True

- name: Wait for the new container to listen on SSH port
  # This only check if the given port is open, which is always the case for Docker containers.
  # It does not actually check that the SSH server is up and running, so I added a delay of 30 sec.
  wait_for:
    state: started
    host: 127.0.0.1
    port: 2223
    delay: 30